{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../GameTimer.svelte",
    "../../ScoreCard.svelte",
    "../../TileBoard.svelte",
    "../../HexTile.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import {\n    BOARD_WIDTH,\n    BOARD_HEIGHT,\n    createGame,\n  } from \"./store.mjs\"\n  import GameTimer from \"./GameTimer.svelte\"\n  import ScoreCard from \"./ScoreCard.svelte\"\n  import TileBoard from \"./TileBoard.svelte\"\n\n  let is_playing = false\n  let is_finished = false\n  let game = createGame()\n  let board_tiles\n\n  let unsubscribe = null\n  game.subscribe( value => {\n    if( unsubscribe ) {\n      unsubscribe()\n    }\n\n    const unsubscribeTiles = $game.board_tiles && $game.board_tiles.subscribe( value => {\n      board_tiles = value\n    })\n    const unsubscribeFinished = $game.is_finished && $game.is_finished.subscribe( value => {\n      if( value ) {\n        is_finished = true\n      } else {\n        is_playing = true\n      }\n    })\n\n    unsubscribe = () => {\n      if( unsubscribeTiles ) unsubscribeTiles()\n      if( unsubscribeFinished ) unsubscribeFinished()\n      unsubscribe = null\n    }\n  })\n\n  function clickStartGame() {\n    game.start()\n    is_finished = false\n  }\n\n  function clickRestart() {\n    window.location.reload( false )\n  }\n</script>\n\n<main class=\"page\">\n  <h1 class=\"page-title\">Hex-Spell</h1>\n  <div class=\"page-layout\">\n    {#if ! is_playing}\n      <button class=\"button\" on:click={ clickStartGame }>Start Game</button>\n    {:else}\n      <TileBoard game={ game } />\n      <div class=\"right-pane\">\n        <GameTimer timer={ $game.timer } />\n        <ScoreCard score_card={ $game.score_card } />\n      </div>\n    {/if}\n  </div>\n  {#if is_finished}\n    <div class=\"board-overlay\">\n      <div class=\"board-score\">\n        <button class=\"button\" on:click={ clickRestart }>Restart</button>\n      </div>\n    </div>\n  {/if}\n</main>\n\n<style type=\"text/scss\">.page {\n  text-align: center;\n  padding: 1em;\n  max-width: 240px;\n  margin: 0 auto;\n}\n\n.page-title {\n  color: #ff3e00;\n  text-transform: uppercase;\n  font-size: 4em;\n  font-weight: 100;\n}\n\n@media (min-width: 640px) {\n  .page {\n    max-width: none;\n  }\n}\n.page-layout {\n  display: flex;\n  justify-content: center;\n}\n\n.right-pane {\n  width: 250px;\n  padding-left: 20px;\n}\n\n.board-overlay {\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.25);\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\n.board-score {\n  min-width: 30%;\n  padding: 40px;\n  background-color: white;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n}\n\n.button {\n  font-size: 26px;\n  padding: 16px;\n  background-color: #DDC994;\n  border-color: #43363D;\n  cursor: pointer;\n}\n\n/*# sourceMappingURL=App.svelte.css.map */</style>\n",
    "<script>\n  import { GAME_TIMER } from \"./store.mjs\"\n  export let timer\n  $: remaining = GAME_TIMER - $timer\n  $: timer_text = `${ Math.floor( remaining / 60 ) }:${ remaining % 60 < 10 ? \"0\" + ( remaining % 60 ) : remaining % 60 }`\n</script>\n\n<section class=\"game-timer\">\n  Timer: { remaining < 0 ? \"0:00\" : timer_text }\n</section>\n\n<style type=\"text/scss\">.game-timer {\n  font-size: 26px;\n}\n\n/*# sourceMappingURL=GameTimer.svelte.css.map */</style>\n",
    "<script>\n  export let score_card\n\n  import {\n    getWordScore,\n  } from \"./store.mjs\"\n  let matched_words_value\n  let score_value\n\n  const unsubscribe = score_card.subscribe( ( { matched_words, score } ) => {\n    score_value = score\n    matched_words_value = matched_words\n  })\n</script>\n\n<section class=\"score-card\">\n  <div class=\"score-total\">Score: { score_value }</div>\n  <ul class=\"word-list\">\n    {#each matched_words_value as word}\n      <li class=\"word-list__item\">\n        <span class=\"word-list__item-text\">{ word }</span>\n        <span class=\"word-list__item-score\">{ getWordScore( word ) }</span>\n      </li>\n    {/each}\n  </ul>\n</section>\n\n<style type=\"text/scss\">.score-total {\n  font-size: 26px;\n}\n\n.word-list {\n  font-size: 18px;\n  list-style: none;\n  padding-inline-start: 0;\n}\n.word-list__item {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n.word-list__item-text {\n  text-align: left;\n}\n.word-list__item-score {\n  text-align: right;\n}\n\n/*# sourceMappingURL=ScoreCard.svelte.css.map */</style>\n",
    "<script>\n  export let game\n\n  import { flip } from \"svelte/animate\"\n\n  import {\n    BOARD_WIDTH,\n    BOARD_HEIGHT,\n    getTileIndexPosition,\n    getTilePositionIndex,\n    isAdjacent,\n  } from './store.mjs'\n  import HexTile from \"./HexTile.svelte\"\n\n  let path = []\n  let is_active = false\n  // @todo can this be a typed array?\n  let selected_flags = Array( BOARD_WIDTH * BOARD_HEIGHT ).fill( false )\n\n  let board_tiles\n  const unsubscribeTile = $game.board_tiles.subscribe( value => {\n    board_tiles = value\n  })\n\n  let is_finished = false\n  const unsubscribeFinished = $game.is_finished.subscribe( value => {\n    is_finished = value\n  })\n\n  function getLetter( index ) {\n    const [ row_index, col_index ] = getTileIndexPosition( index )\n    return board_tiles[ col_index ][ row_index ].value.toUpperCase()\n  }\n\n  function clearPath() {\n    for( const item of path ) {\n      selected_flags[ item ] = false\n    }\n    path = []\n  }\n\n  function handleBoardLeave() {\n    is_active = false\n    clearPath()\n  }\n\n  function handleMouseUp() {\n    is_active = false\n    if( path.length <= 2 ) {\n      return\n    }\n    const word = path.map( getLetter ).join( \"\" )\n    if( game.isWord( word.toLowerCase() ) ) {\n      $game.board_tiles.remove( path )\n      $game.score_card.push( word )\n    }\n    clearPath()\n  }\n\n  function handleHexPress( row_index, col_index ) {\n    is_active = true\n    clearPath()\n\n    path = [ getTilePositionIndex( row_index, col_index ) ]\n    selected_flags[ getTilePositionIndex( row_index, col_index ) ] = true\n  }\n\n  function handleHexOver( row_index, col_index ) {\n    if( is_active ) {\n      const value = getTilePositionIndex( row_index, col_index )\n      const path_index = path.indexOf( value )\n      if( path_index === -1 ) {\n        const tile_index = getTilePositionIndex( row_index, col_index )\n        if( path.length === 0 || isAdjacent( tile_index, path[ path.length - 1 ] ) ) {\n          path.push( value ); path = path\n          selected_flags[ tile_index ] = true\n        }\n      } else if( path_index === path.length - 2 ) {\n        const index = path.pop(); path = path\n        selected_flags[ index ] = false\n      }\n    }\n  }\n</script>\n\n<section class=\"board\">\n  <div class=\"board-tiles\"\n    on:mouseleave|preventDefault={ () => handleBoardLeave() }\n    on:mouseup|preventDefault={ () => handleMouseUp() }\n  >\n    {#each board_tiles as col_tiles, col_index}\n      <div class=\"board-tiles__col\" class:board-tiles__col--even={ col_index % 2 }>\n        {#each col_tiles as tile, row_index (tile.index)}\n          <div class=\"board-tiles__tile\" animate:flip=\"{{ duration: 400 }}\">\n            <HexTile tile={ tile.value } is_selected={ selected_flags[ getTilePositionIndex( row_index, col_index ) ] }\n              on:mousedown={ () => handleHexPress( row_index, col_index ) }\n              on:mouseover={ () => handleHexOver( row_index, col_index ) }\n            />\n          </div>\n        {/each}\n      </div>\n    {/each}\n  </div>\n</section>\n\n<style type=\"text/scss\">.board {\n  border: solid #43363d 2px;\n}\n\n.board-tiles {\n  display: flex;\n  flex-direction: row;\n  padding-left: 27px;\n  min-width: 660px;\n  max-height: 730px;\n  overflow: hidden;\n}\n.board-tiles__col {\n  display: flex;\n  flex-direction: column-reverse;\n  margin-left: -26px;\n  margin-bottom: -4px;\n}\n.board-tiles__col--even {\n  margin-bottom: 49px;\n}\n.board-tiles__tile {\n  margin-bottom: 4px;\n  clip-path: polygon(93px 0%, 100% 50%, 93px 100%, 29px 100%, 0% 50%, 29px 0%);\n  user-select: none;\n}\n\n/*# sourceMappingURL=TileBoard.svelte.css.map */</style>\n",
    "<script>\n  export let is_selected\n  export let tile\n</script>\n\n<div class=\"hex\" class:hex--selected={ is_selected }\n  on:selectstart|preventDefault\n  on:mousedown|preventDefault\n  on:mouseover|preventDefault\n  on:selectstart|preventDefault\n>\n  <div class=\"hex__body\">\n    <div class=\"hex__text\">{ tile }</div>\n  </div>\n</div>\n\n<style type=\"text/scss\">.hex::before {\n  content: \" \";\n  float: left;\n  width: 0;\n  border-right: 30px solid #F2EEC3;\n  border-top: 52px solid transparent;\n  border-bottom: 52px solid transparent;\n}\n.hex::after {\n  content: \" \";\n  float: left;\n  width: 0;\n  border-left: 30px solid #F2EEC3;\n  border-top: 52px solid transparent;\n  border-bottom: 52px solid transparent;\n}\n.hex__body {\n  float: left;\n  width: 60px;\n  height: 104px;\n  background: #F2EEC3;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.hex__text {\n  font-size: 32px;\n}\n.hex--selected::before {\n  border-right-color: #D1A386;\n}\n.hex--selected::after {\n  border-left-color: #D1A386;\n}\n.hex--selected .hex__body {\n  background: #D1A386;\n}\n\n/*# sourceMappingURL=HexTile.svelte.css.map */</style>\n"
  ],
  "names": [],
  "mappings": "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"
}