{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../src/App.svelte",
    "../../src/ScoreCard.svelte",
    "../../src/TileBoard.svelte",
    "../../src/HexTile.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import {\n    BOARD_WIDTH,\n    BOARD_HEIGHT,\n    startGame,\n  } from \"./store.mjs\"\n  import GameTimer from \"./GameTimer.svelte\"\n  import ScoreCard from \"./ScoreCard.svelte\"\n  import TileBoard from \"./TileBoard.svelte\"\n\n  const game = startGame()\n\n  let board_tiles\n  game.board_tiles.subscribe( value => {\n    board_tiles = value\n  })\n</script>\n\n<main class=\"page\">\n  <h1 class=\"page-title\">HexSpell</h1>\n  <div class=\"page-layout\">\n    <TileBoard game={ game } />\n    <div class=\"right-pane\">\n      <GameTimer timer={ game.timer } />\n      <ScoreCard score_card={ game.score_card } />\n    </div>\n  </div>\n</main>\n\n<style type=\"text/scss\">.page {\n  text-align: center;\n  padding: 1em;\n  max-width: 240px;\n  margin: 0 auto;\n}\n\n.page-title {\n  color: #ff3e00;\n  text-transform: uppercase;\n  font-size: 4em;\n  font-weight: 100;\n}\n\n@media (min-width: 640px) {\n  .page {\n    max-width: none;\n  }\n}\n.page-layout {\n  display: flex;\n  justify-content: center;\n}\n\n.right-pane {\n  width: 250px;\n}\n\n/*# sourceMappingURL=App.svelte.css.map */</style>\n",
    "<script>\n  export let score_card\n\n  import {\n    getWordScore,\n  } from \"./store.mjs\"\n  let matched_words_value\n  let score_value\n\n  const unsubscribe = score_card.subscribe( ( { matched_words, score } ) => {\n    score_value = score\n    matched_words_value = matched_words\n  })\n</script>\n\n<section class=\"score-card\">\n  <div>Score: { score_value }</div>\n  <ul class=\"word-list\">\n    {#each matched_words_value as word}\n      <li class=\"word-list__item\">\n        <span class=\"word-list__item-text\">{ word }</span>\n        <span class=\"word-list__item-score\">{ getWordScore( word ) }</span>\n      </li>\n    {/each}\n  </ul>\n</section>\n\n<style type=\"text/scss\">.word-list {\n  list-style: none;\n  padding-inline-start: 0;\n}\n.word-list__item {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n.word-list__item-text {\n  text-align: left;\n}\n.word-list__item-score {\n  text-align: right;\n}\n\n/*# sourceMappingURL=ScoreCard.svelte.css.map */</style>\n",
    "<script>\n  export let game\n\n  import { flip } from \"svelte/animate\"\n\n  import {\n    BOARD_WIDTH,\n    BOARD_HEIGHT,\n    getTileIndexPosition,\n    getTilePositionIndex,\n    isAdjacent,\n  } from './store.mjs'\n  import HexTile from \"./HexTile.svelte\"\n\n  const { score_card, board_tiles } = game\n\n  let path = []\n  let is_active = false\n  // @todo can this be a typed array?\n  let selected_flags = Array( BOARD_WIDTH * BOARD_HEIGHT ).fill( false )\n\n  let board_tiles_value\n  const unsubscribe = board_tiles.subscribe( value => {\n    board_tiles_value = value\n  })\n\n  function getLetter( index ) {\n    const [ row_index, col_index ] = getTileIndexPosition( index )\n    return board_tiles_value[ col_index ][ row_index ].value.toUpperCase()\n  }\n\n  function clearPath() {\n    for( const item of path ) {\n      selected_flags[ item ] = false\n    }\n    path = []\n  }\n\n  function handleBoardLeave() {\n    is_active = false\n    clearPath()\n  }\n\n  function handleMouseUp() {\n    is_active = false\n    if( path.length <= 2 ) {\n      return\n    }\n    const word = path.map( getLetter ).join( \"\" )\n    if( game.isWord( word.toLowerCase() ) ) {\n      board_tiles.remove( path )\n      score_card.push( word )\n    }\n    clearPath()\n  }\n\n  function handleHexPress( row_index, col_index ) {\n    is_active = true\n    clearPath()\n\n    path = [ getTilePositionIndex( row_index, col_index ) ]\n    selected_flags[ getTilePositionIndex( row_index, col_index ) ] = true\n  }\n\n  function handleHexOver( row_index, col_index ) {\n    if( is_active ) {\n      const value = getTilePositionIndex( row_index, col_index )\n      const path_index = path.indexOf( value )\n      if( path_index === -1 ) {\n        const tile_index = getTilePositionIndex( row_index, col_index )\n        if( path.length === 0 || isAdjacent( tile_index, path[ path.length - 1 ] ) ) {\n          path.push( value ); path = path\n          selected_flags[ tile_index ] = true\n        }\n      } else if( path_index === path.length - 2 ) {\n        const index = path.pop(); path = path\n        selected_flags[ index ] = false\n      }\n    }\n  }\n</script>\n\n<section class=\"board\"\n  on:mouseleave|preventDefault={ () => handleBoardLeave() }\n  on:mouseup|preventDefault={ () => handleMouseUp() }\n>\n  {#each board_tiles_value as col_tiles, col_index}\n    <div class=\"board__col\" class:board__col--even={ col_index % 2 }>\n      {#each col_tiles as tile, row_index (tile.index)}\n        <div class=\"board__tile\" animate:flip>\n          <HexTile tile={ tile.value } is_selected={ selected_flags[ getTilePositionIndex( row_index, col_index ) ] }\n            on:mousedown={ () => handleHexPress( row_index, col_index ) }\n            on:mouseover={ () => handleHexOver( row_index, col_index ) }\n          />\n        </div>\n      {/each}\n    </div>\n  {/each}\n</section>\n\n<style type=\"text/scss\">.board {\n  display: flex;\n  flex-direction: row;\n  padding-left: 27px;\n  min-width: 660px;\n  max-height: 641px;\n  overflow: hidden;\n  border: solid #333 2px;\n}\n.board__col {\n  display: flex;\n  flex-direction: column-reverse;\n  margin-left: -26px;\n  margin-bottom: -4px;\n}\n.board__col--even {\n  margin-bottom: 49px;\n}\n.board__tile {\n  margin-bottom: 4px;\n  clip-path: polygon(93px 0%, 100% 50%, 93px 100%, 29px 100%, 0% 50%, 29px 0%);\n  user-select: none;\n}\n\n/*# sourceMappingURL=TileBoard.svelte.css.map */</style>\n",
    "<script>\n  export let is_selected\n  export let tile\n</script>\n\n<div class=\"hex\" class:hex--selected={ is_selected }\n  on:selectstart|preventDefault\n  on:mousedown|preventDefault\n  on:mouseover|preventDefault\n  on:selectstart|preventDefault\n>\n  <div class=\"hex__body\">\n    <div class=\"hex__text\">{ tile }</div>\n  </div>\n</div>\n\n<style type=\"text/scss\">.hex::before {\n  content: \" \";\n  float: left;\n  width: 0;\n  border-right: 30px solid yellow;\n  border-top: 52px solid transparent;\n  border-bottom: 52px solid transparent;\n}\n.hex::after {\n  content: \" \";\n  float: left;\n  width: 0;\n  border-left: 30px solid yellow;\n  border-top: 52px solid transparent;\n  border-bottom: 52px solid transparent;\n}\n.hex__body {\n  float: left;\n  width: 60px;\n  height: 104px;\n  background: yellow;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.hex--selected::before {\n  border-right-color: red;\n}\n.hex--selected::after {\n  border-left-color: red;\n}\n.hex--selected .hex__body {\n  background: red;\n}\n\n/*# sourceMappingURL=HexTile.svelte.css.map */</style>\n"
  ],
  "names": [],
  "mappings": "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"
}